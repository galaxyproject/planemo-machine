---
# TODO: break into smaller tasks - such as configuring all X stuff with a
# single command.

- name: Upgrade the system
  apt: upgrade=dist

- name: Install the debs
  apt: name={{ item }} state=latest update_cache=yes
  with_items:
    - build-essential
    - curl
    - git
    - m4
    - ruby
    - texinfo
    - libbz2-dev
    - libcurl4-openssl-dev
    - libexpat-dev
    - libncurses-dev
    - libncursesw5-dev
    - zlib1g-dev
    - python-dev
    - cmake
    - tmux
    - update-motd
    - vim
    - emacs24-nox
    - supervisor
    - nodejs
    - npm
    - r-base-core
    - r-cran-getopt
    - r-bioc-biocinstaller

# Setup atom (https://atom.io/) ppa and install.
- name: Add custom PPAs
  apt_repository: repo={{ item }} update_cache=yes
  when: galaxy_devbox_include_x
  with_items:
    - "ppa:webupd8team/atom"
    - "ppa:mystic-mirage/komodo-edit"

- name: Add Google key for Chrome installation
  apt_key:
    url: https://dl.google.com/linux/linux_signing_key.pub
    state: present
  when: galaxy_devbox_include_x

- name: Add Google APT repository
  apt_repository:
    repo: deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main
    state: present
  when: galaxy_devbox_include_x

- name: Install the debs (X11 environment)
  apt: name={{ item }} state=latest update_cache=yes
  with_items:
    - google-chrome-stable
    - komodo-edit
    - atom
    - xfce4-xkb-plugin
    - gedit
    - xubuntu-core
    - firefox
  when: galaxy_devbox_include_x

- name: Ensures /etc/lightdm/lightdm.conf.d/ dir exists
  file: path=/etc/lightdm/lightdm.conf.d/ state=directory

- name: Configure GUI to auto login the dev user.
  template: src=10-xubuntu.conf.j2 dest=/etc/lightdm/lightdm.conf.d/10-xubuntu.conf
  when: galaxy_devbox_include_x

- name: Install linuxbrew
  become: True
  become_user: "{{ dev_user_name }}"
  shell: "ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install)\""

- name: Download vim extras
  get_url: url=http://j.mp/spf13-vim3 dest={{ dev_user_home }}/vimextras.sh
  become: True
  become_user: "{{ dev_user_name }}"

- name: Install vim extras
  become: True
  become_user: "{{ dev_user_name }}"
  shell: "sh {{ dev_user_home }}/vimextras.sh"

- name: Tap galaxyproject recipes
  become: True
  become_user: "{{ dev_user_name }}"
  shell: "{{ dev_user_home }}//.linuxbrew/bin/brew tap galaxyproject/tap"

- name: Install planemo
  become: True
  become_user: "{{ dev_user_name }}"
  shell: "{{ dev_user_home }}/.linuxbrew/bin/brew install -v planemo"

- name: Setup .planemo.yml
  template: src=planemo.yml.j2 dest={{ dev_user_home }}/.planemo.yml owner={{ dev_user_name }} group={{ dev_user_group }}

- name: Configure Destop directory.
  file: path={{ dev_user_home }}/Desktop state=directory  owner={{ dev_user_name }} group={{ dev_user_group }}
  when: galaxy_devbox_include_x

- name: Configure Destop shortcuts.
  template: src=Desktop/{{ item }}.desktop.j2 dest={{ dev_user_home }}/Desktop/{{ item }}.desktop mode=a+x owner={{ dev_user_name }} group={{ dev_user_group }}
  when: galaxy_devbox_include_x
  with_items:
    - atom
    - komodo-edit
    - exo-terminal-emulator
    - exo-web-browser
    - galaxyproject
    - ipython
    - localgalaxy
    - localtoolshed
    - planemo
    - toolsyntax

- name: Configure Desktop link to development tools.
  file: src={{ dev_tool_conf_dir }} dest={{ dev_user_home }}/Desktop/tools state=link owner={{ dev_user_name }} group={{ dev_user_group }} force=true
  when: galaxy_devbox_include_x

- name: Install linuxbrew bash completion stuff
  become: True
  become_user: "{{ dev_user_name }}"
  shell: "{{ dev_user_home }}/.linuxbrew/bin/brew install -v bash-completion"

- name: Install the dev tools
  apt: name={{ item }} state=latest update_cache=yes
  with_items:
    - emacs24-nox

- name: Start supervisord on boot.
  become: True
  shell: "systemctl enable supervisor.service"

- name: Link nodejs to node
  file: path=/usr/bin/node state=link src=/usr/bin/nodejs

- name: Install more locales
  locale_gen: name={{ item }} state=present
  with_items:
    - en_US.UTF-8
    - en_GB.UTF-8
    - de_DE.UTF-8

- name: Deactivate auto updates
  become: True
  become_user: "{{ galaxy_user_name }}"
  shell: "gsettings set org.gnome.settings-daemon.plugins.updates active false && gsettings set org.gnome.settings-daemon.plugins.updates auto-download-updates false"

- name: Add dev tool configuration file.
  template: src=dev_tool_conf.xml.j2 dest={{ dev_tool_conf }}

- name: Add planemo machine web content
  git: repo={{ planemo_machine_web_repo }} dest={{ planemo_machine_web_dir }} accept_hostkey=yes
  when: nginx_serve_planemo_machine_web

- name: Add small tool conf
  template: src=tool_conf.small.xml.j2 dest={{ small_tool_conf_path }}
  when: small_tool_conf

- name: "Install Galaxy management scripts."
  template: src=restart_galaxy.j2 dest=/usr/local/bin/restart_galaxy mode=a+x

- name: "Eliminate unnecessary notifications on login."
  become: True
  shell: "rm -f /etc/update-motd.d/9*"

- name: "Add the local environment settings."
  template: src=planemo-machine.sh.j2 dest={{ dev_user_localrc }}

# TODO: INFOPATH
- name: Update the shell environment
  lineinfile: "{{ item }}"
  with_items:
    - "dest={{ dev_user_shellrc }} line='[[ -f {{ dev_user_localrc }} ]] && . {{ dev_user_localrc }}'"
    - "dest={{ dev_user_localrc }} line='export PATH={{ dev_user_home }}/miniconda2/bin:{{ dev_user_home }}/.linuxbrew/bin:$PATH'"
    - "dest={{ dev_user_localrc }} line='. {{ dev_user_home }}/.linuxbrew/etc/bash_completion'"

- name: "Update login notifications."
  become: True
  shell: "/usr/sbin/update-motd"

- name: Ensure existence of .config directory
  file: path={{ dev_user_home }}/.config/ state=directory owner={{ dev_user_name }} group={{ dev_user_group }}

- name: Ensure existence of target directory for next step.
  file: path={{ dev_user_home }}/.config/xfce4/xfconf/xfce-perchannel-xml state=directory owner={{ dev_user_name }} group={{ dev_user_group }}

- name: Download miniconda
  get_url: url=https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh dest={{ dev_user_home }}/Miniconda-latest-Linux-x86_64.sh
  become: True
  become_user: "{{ dev_user_name }}"

- name: Install miniconda
  become: True
  become_user: "{{ dev_user_name }}"
  shell: "bash {{ dev_user_home }}/Miniconda-latest-Linux-x86_64.sh -b"

- name: "Add the keyboard layout switcher to the panel."
  template: src=xfce4-panel.xml.j2 dest={{ dev_user_home }}/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-panel.xml
  when: galaxy_devbox_include_x

- name: "Install R libraries"
  become: True
  shell: "R -e 'library(BiocInstaller); biocLite(c(\"{{ item }}\"))'"
  with_items:
    - Rgraphviz
    - motifbreakR

- name: "Clean up temporary files"
  become: True
  file: path={{ item }} state=absent
  with_items:
    - "{{ dev_user_home }}/Miniconda-latest-Linux-x86_64.sh"
    - "{{ dev_user_home }}/vimextras.sh"

- name: "Autoremove apt packages"
  become: True
  shell: "apt-get -y autoremove"

- name: "Clean the apt cache"
  become: True
  shell: "apt-get -y clean"
